Probleme Steuerrad:
	- Es kann vorkommen, dass das Steuerrad anfängt zu "zittern". Sobald dies der Fall ist, wird dieses unvorhersagbar rotiert.
	- Während der Simulator des HTC.UnityPlugins läuft, kann beispielsweise das Programm Discord (bei einer Bildschirmübertragung) 
	die Interaktionsfähigkeit mit dem Steuerrad beeinflussen. Durch das resultierende "flackern" der Eingabe über die Maus wird ein zuvor erwähntes 
	Zittern ausgelöst.

	Lösungsansatz:
	In den Skripten SteeringWheelCollider.cs und SteeringWheel.cs wurde Beschränkungen hinzugefügt, die mit "Feinabstimmung fuer Steuerrad" markiert wurden.
	Somit konnte das Auftreten des Zitterns reduziert werden. Die genaue Ursache diesbezüglich wurde im Verlauf des Projekts nicht gefunden.

Problem Inseln:
	- Die Inseln die beim Start der Anwendung instantiiert werden, können miteinander kollidieren.

	Bisherige Lösung:
	- Abstandscheck

Problem Collider, Fuel und Airship:
	- Bei Kollisionen des Airships mit einem Collider, bei zu hoher Geschwindigkeit, werden alle im Airship enthaltenen Kollider beeinflusst. Somit kann
	es vorkommen, dass die Kollision von Fuel (auf dem Airship) mit dem Airship nicht mehr registriert wird. 
	- Bei zu hoher Geschwindigkeit kann es vorkommen, dass aufgrund der zu geringen Abtastrate der Collider, das Airship in das andere 
	Objekt eindringt. In diesem Fall wird das Airship aus dem anderen Objekt geschleudert, sobald die Kollision registriert wird.
	- Nach einer Kollision sorgt die Krafteinwirkung auf den Rigidbody des Airships für eine ständige Positionsänderung. 
	Durch diese Änderungen kann das Schiff die vorgegebene Höhe überschreiten.	
	
	- Das Airship wurde mit einem Rigidbody ausgestattet, wodurch alle Collider beeinflusst werden, die sich an einem Child-Objekt befinden. Kollisionen 
	mit Triggern werden dann nicht mehr registriert. Um dies zu beheben, müssen alle Collider, die als Trigger fungieren sollen, mit einem Rigidbody ausgestattet werden.
	Weiterhin müssen die Eigenschaften "UseGravity" ausgeschalten und "IsKinematic" angeschalten werden. 
	
	Bisherige Lösung:
	- Die Collision Detection der Rigidbodys kann angepasst werden, war hier jedoch nicht notwendig.
	- Geschwindigkeit von Umgebung und Airship wurden angepasst.
	- Fuel wird in Intervallen im Airship neu plaziert.
	- Es werden jedes Update alle einwirkenden Kräfte auf den Rigidbody des Schiffs entfernt.

Problem Asynchrones Laden:
	- Nach dem Auswählen einer Szene wird dieses im Hintergrund geladen und danach aufgerufen, dabei werden die Texturen der prozedual generierten Welt nicht geladen.

	Bisherige Lösung:
	- Anstelle von SceneManager.LoadSceneAsync() wurde SceneManager.LoadScene() benutzt. Der kreisförmige Fortschrittsbalken wird also im Moment nicht genutzt, des Weiteren
	kann der Benutzter sich während dem Laden der Szene nicht in der "Start" Szene bewegen.

Problem Partikelsystem:
	- Das Partikelsystem welches durch den Knopf zum Aufsteigen (befindet sich rechts an dem Armaturenbrett) ausgelöst werden soll, wird teilweise nicht gestartet. Zu
	diesem Problem gab es bisher keine Lösungen.

Problem 3D-Modelle von Blender:
	- Alle Modelle wurden in Blender erstellt. Blender benutzt im Gegensatz zu Unity ein rechtshändiges Koordinatensystem. Deswegen gab es beim Importieren der
	.fbx Dateien Probleme. Teilweise wurden die Modelle um -90 Grad auf der X-Achse gedreht. Auch das Parenting in Blender führte zu Problemen bei der Rotation.

	Bisherige Lösung:
	- Alle statischen Elemente der entsprechenden Modelle wurden in Blender mit einander vereint und einzelne bewegliche Elemente wurden als separate .fbx Dateien
	dem Projekt hinzugefügt. Das entsprechende Parenting wurde in Unity selbst ausgeführt um Rotationsprobleme zu verhindern.